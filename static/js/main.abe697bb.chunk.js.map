{"version":3,"sources":["context/context.tsx","actions/showModalAction.js","components/Modal/ModalButton.tsx","actions/signInAction.js","constants/api.js","components/UserAdmin/SignOut.tsx","containers/App/Nav.tsx","containers/App/Header.tsx","containers/BrowseTasks/TaskContent.tsx","actions/updateAction.js","components/Modal/AlertModal.tsx","components/Modal/ConfirmModal.tsx","containers/BrowseTasks/TaskItem.tsx","containers/BrowseTasks/TaskNav.tsx","components/Loading.tsx","containers/BrowseTasks/TaskPage.tsx","containers/MyTasks/TaskLabel.tsx","containers/MyTasks/TaskTag.tsx","containers/MyTasks/TaskList.tsx","containers/MyTasks/Pagination.tsx","containers/MyTasks/MyTasks.tsx","containers/TaskDetail/TaskDetailsPage.tsx","components/PrivateRoute.jsx","hooks/usePostData.tsx","hooks/useChangeInput.tsx","hooks/useValidation.tsx","containers/TaskDetail/ReviewMaker.tsx","containers/App/Route.tsx","containers/App/Main.tsx","containers/PostATask/WhatAndHowMuch.tsx","containers/PostATask/WhenAndWhere.tsx","containers/PostATask/ReviewAndSubmit.tsx","containers/PostATask/PostAtask.tsx","components/FormGroup.tsx","components/UserAdmin/UserAccount.tsx","components/Modal/ModalContent.tsx","components/Modal/ModalWrapper.tsx","reducers/showModalReducer.ts","reducers/signInReducer.ts","reducers/updateReducer.ts","containers/App/App.tsx","index.tsx"],"names":["SignInStatus","React","signInStatus","username","isSignIn","userId","signInDispatch","Update","update","updateDispatch","ToggleModal","modalStatus","status","modal","modalDispatch","hideModal","text","type","ModalButton","props","_React$useContext","react","className","onClick","target","children","signInAction","id","signOutAction","API_Url","SignOut","handleSignOut","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","fetch","concat","method","body","JSON","stringify","action","headers","Content-Type","credentials","sent","stop","this","apply","arguments","style","maxWidth","Nav","Modal_ModalButton","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","activeClassName","to","UserAdmin_SignOut","Header","App_Nav","TaskContent","content","startUpdate","endUpdate","FormModal","message","clear","confirm","ConfirmActionModal","url","input","click","title","cancel","_React$useState","_React$useState2","slicedToArray","alert","setAlert","handleSubmit","response","then","res","json","handleComfirm","AlertModal","TaskDetail","isShowDetails","setIsShowDetails","_React$useState3","_React$useState4","setConfirm","tasker","taskerId","key","_id","what","where","moment","when","format","price","disabled","poster","e","preventDefault","BrowseTasks_TaskContent","postedTime","assignedTime","ConfirmModal","TaskList","element","initTasks","map","item","TaskItem","assign","Loading","role","Tasks","initTaskList","setInitTaskList","setResponse","_React$useState5","_React$useState6","hasMoreTask","setHasMoreTask","_React$useState7","_React$useState8","searchAfterId","setSearchAfterId","_React$useState9","_React$useState10","searchBeforeId","setSearchBeforeId","_React$useState11","_React$useState12","setTotalTask","_React$useState13","_React$useState14","isDataLoaded","setIsDataLoaded","_React$useState15","_React$useState16","isDataLoading","setIsDataLoading","_React$useState17","_React$useState18","isScrolled","setIsScrolled","_React$useState19","_React$useState20","isMoreDataLoading","setIsMoreDataLoading","_React$useState21","_React$useState22","newTaskList","setNewTaskList","_React$useState23","_React$useState24","newTaskNumber","setNewTaskNumber","_React$useState25","_React$useState26","checked","setChecked","_React$useState27","_React$useState28","filter","fetchData","result","ok","data","tasks","meta","hasNext","length","fetchNewData","_ref2","_callee2","_context2","abrupt","s","total","_x","fresh","setInterval","clearInterval","fetchMoreData","_ref3","_callee3","_context3","setTimeout","toConsumableArray","_x2","elem","document","getElementsByClassName","handleScroll","scrollTop","clientHeight","scrollHeight","addEventListener","removeEventListener","onChange","pre","htmlFor","components_Loading","TaskNav","TaskLabel","Link","fontSize","TaskTag","review","setReview","createReview","taskId","MyTasks_TaskLabel","MyTasks_TaskTag","Pagination","handleNextPage","parseInt","currentPage","handlePrevPage","hasPrev","defaultPagination","pageSize","Mytasks","setData","pagination","setPagination","page","setPage","setRole","setFilter","resultJson","refresh","href","aria-selected","value","MyTasks_Pagination","i","MyTasks_TaskList","setIsLoading","isLoaded","setIsLoaded","fetchTasks","match","params","completedTime","PrivateRoute","Component","component","rest","objectWithoutProperties","Route","render","Redirect","pathname","state","from","location","usePostData","initialResponse","postData","option","objectSpread","_x3","_x4","useChangeInput","initialValue","setInput","name","newInput","defineProperty","useValidation","schema","error","validation","setValidation","validate","t0","errors","yup","shape","required","min","rating","moreThan","UserAccount","_React$useContext2","_usePostData","_usePostData2","setTrigger","_useChangeInput","_useChangeInput2","handleChange","_useValidation","_useValidation2","handleReview","cols","rows","Routes","Switch","exact","path","BrowseTasks","components_PrivateRoute","MyTasks","ReviewMaker","Main","BrowserRouter","App_Header","App_Route","defaultInput","WhatAndHowMuch","handleNext","handlePrice","handleWhat","handleStep","width","aria-valuenow","aria-valuemin","aria-valuemax","WhenAndWhere","handleWhen","handleWhere","ReviewAndSubmit","resetResponse","posterId","task","handleResponse","PostAtask","setWhat","setPrice","setWhere","setWhen","step","setStep","PostATask_WhatAndHowMuch","PostATask_WhenAndWhere","PostATask_ReviewAndSubmit","FormGroup","size","change","password","handleSignIn","components_FormGroup","ModalContent","PostATask_PostAtask","UserAdmin_UserAccount","ModalWrapper","Modal_ModalContent","showModalReducer","Error","signInReducer","updateReducer","App","_React$useReducer","_React$useReducer2","_React$useReducer3","_React$useReducer4","_React$useReducer5","_React$useReducer6","checkSign","Provider","App_Main","Modal_ModalWrapper","ReactDOM","containers_App_App","getElementById"],"mappings":"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","file":"static/js/main.abe697bb.chunk.js","sourcesContent":["import * as React from 'react'\r\nimport {SignInAction,} from '../reducers/signInReducer'\r\nimport {UpdateAction} from '../reducers/updateReducer'\r\nimport {ToggleModalAction} from '../reducers/showModalReducer'\r\nconst signInStatus = {\r\n    username:'',\r\n    isSignIn:false,\r\n    userId:''\r\n}\r\nconst signInDispatch:React.Dispatch<SignInAction> = ()=>{}  \r\nconst SignInStatus = React.createContext({signInStatus,signInDispatch })\r\nconst updateDispatch:React.Dispatch<UpdateAction> = ()=>{}\r\nconst modalDispatch:React.Dispatch<ToggleModalAction> = ()=>{}\r\nconst update = false\r\nconst modalStatus = {\r\n    status:false,\r\n    modal:''\r\n}\r\nconst Update = React.createContext({update,updateDispatch})\r\nconst ToggleModal = React.createContext({modalStatus,modalDispatch})\r\nexport {SignInStatus,Update,ToggleModal}\r\n// export {Update,ToggleModal}\r\n\r\n","const showModal = (text)=>{\r\n    return {\r\n        type:'show',\r\n        text:text\r\n    }\r\n}\r\nconst hideModal = (text)=>{\r\n    return {\r\n        type:'hide',\r\n        text:text\r\n    }\r\n}\r\nexport {showModal,hideModal}","import * as React from 'react'\r\nimport {ToggleModal } from '../../context/context';\r\nimport {showModal} from '../../actions/showModalAction'\r\nimport './style.css'\r\n\r\ntype Props = {\r\n    target:string;\r\n}\r\nconst ModalButton:React.FunctionComponent<Props> = (props) =>{\r\n    const {modalStatus,modalDispatch} = React.useContext(ToggleModal)\r\n\r\n    return (\r\n        <button type='button' className='btn btn-sm btn-primary px-1'  onClick={()=>{modalDispatch(showModal(props.target))}}>{props.children}</button>\r\n    )\r\n}\r\nexport default ModalButton","function signInAction(text,id){\r\n    return {\r\n        type:'signIn',\r\n        text:text,\r\n        id:id\r\n    }\r\n}\r\nconst signOutAction ={\r\n    type:'signOut',\r\n    text:'',\r\n    id:''\r\n}\r\nexport {signInAction,signOutAction} ","// const API_Url = 'http://localhost:5000'\r\nconst API_Url = 'http://ec2-3-89-33-101.compute-1.amazonaws.com'\r\nexport default API_Url","import * as React from 'react'\r\nimport { SignInStatus } from '../../context/context';\r\nimport { signOutAction } from '../../actions/signInAction'\r\nimport API_Url from '../../constants/api'\r\n\r\nconst SignOut: React.FunctionComponent = () => {\r\n    const { signInStatus, signInDispatch } = React.useContext(SignInStatus)\r\n    const handleSignOut = async () => {\r\n        const result = await fetch(`${API_Url}/user`, { method: 'post',body: JSON.stringify({action:'signOut'}),headers: { 'Content-Type': 'application/json' }, credentials: \"include\" })\r\n    }\r\n    return (\r\n        <div style={{ \"maxWidth\": \"240px\" }} className=\"col-6 col-md-4 col-lg-4 btn-group px-1\">\r\n            <button className='btn btn-sm btn-info p-1'>{signInStatus.username}</button>\r\n            <button className='btn btn-sm btn-info p-1' onClick={() => {\r\n                handleSignOut(); signInDispatch(signOutAction);\r\n            }}>SignOut</button>\r\n        </div>\r\n    )\r\n}\r\nexport default SignOut\r\n","import * as React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport ModalButton from '../../components/Modal/ModalButton'\r\nimport SignOut from '../../components/UserAdmin/SignOut'\r\nimport { SignInStatus } from '../../context/context'\r\n\r\nconst Nav = () => {\r\n    const { signInStatus } = React.useContext(SignInStatus)\r\n    return (\r\n        <nav className=\"fixed-top bg-dark navbar-expand-sm navbar-dark\">\r\n            <div className='header-container navbar flex-sm-row-reverse'>\r\n                <div className='d-sm-none'>\r\n                    <ModalButton target={signInStatus.isSignIn ? \"postATask\" : \"signIn\"}>Post A Task</ModalButton>\r\n\r\n                </div>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav justify-content-between\">\r\n                        <div className=\"nav-item nav-link \" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <NavLink activeClassName='nav-link-active' className=\"text-white text-decoration-none\" to='/tasks' >Browse Tasks</NavLink>\r\n                        </div>\r\n                        <div className=\"nav-item nav-link\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            {signInStatus.isSignIn && <NavLink activeClassName='nav-link-active' className=\"text-white text-decoration-none\" to='/mytasks'>MyTasks</NavLink>}\r\n                        </div>\r\n                        <div className='d-none d-sm-block nav-item nav-link'>\r\n                            <ModalButton target={\"postATask\"}>Post A Task</ModalButton>\r\n\r\n                            {/* <ModalButton target={signInStatus.isSignIn ? \"postATask\" : \"signIn\"}>Post A Task</ModalButton> */}\r\n                        </div>\r\n                        <div className=\"nav-item nav-link\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            {\r\n                                signInStatus.isSignIn\r\n                                    ? <SignOut />\r\n                                    :\r\n                                    <div style={{ \"maxWidth\": \"240px\" }} className=\"mx-auto btn-group px-1\">\r\n                                        <ModalButton target=\"signIn\">Sign In</ModalButton>\r\n                                        <ModalButton target=\"signUp\">Sign Up</ModalButton>\r\n                                    </div>\r\n                            }\r\n                        </div>\r\n                    </ul>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </nav>\r\n    )\r\n}\r\nexport default Nav","import * as React from 'react'\r\nimport Nav from './Nav'\r\nimport './style.css'\r\nconst Header = () => {\r\n        return (\r\n                <div className=''>\r\n                        <Nav />\r\n                </div>\r\n        )\r\n}\r\nexport default Header","import * as React from 'react'\r\ntype Props = {\r\n    content:string\r\n}\r\nconst TaskContent:React.FunctionComponent<Props> = (props)=>{\r\n    return (\r\n    <div className='mt-1'>\r\n        <span className=\"font-weight-bold\">{props.children}</span>\r\n        <span className=''>{props.content}</span>\r\n    </div>\r\n    )\r\n}\r\nexport default TaskContent","const startUpdate = {\r\n    type:'start'\r\n}\r\nconst endUpdate = {\r\n    type:'end'\r\n}\r\n\r\nexport {startUpdate,endUpdate}","import * as React from 'react';\r\nimport './style.css'\r\ninterface IProp {\r\n    message: string;\r\n    clear: () => void\r\n    confirm: () => void\r\n\r\n}\r\nconst FormModal = ({ message, clear, confirm }: IProp) => {\r\n    return (\r\n        <div className='alert-container rounded shadow text-center'>\r\n            <div className='alert-content bg-light d-flex flex-column justify-content-around '>\r\n                <div className='p-2 small rounded mx-auto text-danger font-weight-bold'>{message}</div>\r\n                <div className='d-flex justify-content-between p-2'>\r\n                    <button className='btn btn-primary btn-sm' type=\"button\" onClick={() => { confirm() }}>ok</button>\r\n                    <button className='btn btn-danger btn-sm' type=\"button\" onClick={() => { clear() }}>clear</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default FormModal","import * as React from 'react'\r\nimport { startUpdate, endUpdate } from '../../actions/updateAction'\r\nimport { Update } from '../../context/context'\r\nimport './style.css'\r\nimport AlertModal from './AlertModal'\r\ninterface IProps {\r\n    url: string;\r\n    input: object;\r\n    title: string;\r\n    click: () => void;\r\n    cancel: () => void;\r\n}\r\nconst ConfirmActionModal = (props: IProps) => {\r\n    const { update, updateDispatch } = React.useContext(Update)\r\n    const { url, input, click, title, cancel } = props;\r\n    const [alert, setAlert] = React.useState({ status: false, message: '' })\r\n    const handleSubmit = async () => {\r\n        const response = await fetch(url, input).then(res => res.json())\r\n        setAlert({ status: true, message: response.message })\r\n    }\r\n    const handleComfirm = () => { click(); setAlert({ status: false, message: '' }); updateDispatch(startUpdate)}\r\n    return (\r\n        <div className='modal-container'>\r\n            <div className='confirm-container bg-warning text-center'>\r\n                <h3>{title}?</h3>\r\n                <div className='d-flex justify-content-around mt-auto'>\r\n                    <button className='btn btn-primary' onClick={handleSubmit}>Confirm</button>\r\n                    <button className='btn btn-danger' onClick={() => { cancel() }}>Cancel</button>\r\n                </div>\r\n                {alert.status &&\r\n                    <AlertModal message={alert.message} confirm={handleComfirm} clear={handleComfirm} />\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default ConfirmActionModal","import * as React from 'react'\r\nimport moment from 'moment'\r\nimport TaskContent from './TaskContent'\r\nimport ModalButton from '../../components/Modal/ModalButton'\r\nimport { SignInStatus, Update } from '../../context/context'\r\nimport ConfirmModal from '../../components/Modal/ConfirmModal'\r\n\r\ntype IData = {\r\n  poster: string,\r\n  posterId: string,\r\n  postedTime: string,\r\n  what: string,\r\n  where: string,\r\n  when: string,\r\n  price: string,\r\n  status: string,\r\n  tasker: string,\r\n  taskerId: string,\r\n  assignedTime: string,\r\n  _id: string,\r\n  completedTime: string,\r\n  reviews: string\r\n}\r\nconst TaskDetail: React.FunctionComponent<IData> = (props) => {\r\n  const { signInStatus } = React.useContext(SignInStatus)\r\n  const [isShowDetails, setIsShowDetails] = React.useState(false)\r\n  const handleShowDetails = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    e.preventDefault();\r\n    setIsShowDetails((prev) => !prev)\r\n  }\r\n  const [confirm, setConfirm] = React.useState(false)\r\n  const input = { method: 'put', body: JSON.stringify({ tasker: signInStatus.username, taskerId: signInStatus.userId, status: 'ASSIGNED' }), headers: { 'Content-Type': 'application/json' },credentials: 'include' }\r\n  const click = () => {\r\n    setConfirm(false)\r\n  }\r\n  const cancel = () => {\r\n    setConfirm(false)\r\n  }\r\n  let status\r\n  switch (props.status) {\r\n    case 'COMPLETED':\r\n      status = 'dark'\r\n      break\r\n    case 'ASSIGNED':\r\n      status = 'warning'\r\n      break\r\n    case 'DONE':\r\n      status = 'danger'\r\n      break\r\n    default:\r\n      status = 'success'\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <div className='task-list-item bg-white m-1 p-1 row' key={props._id}>\r\n        <div className='col-12 d-flex align-items-center border-bottom border-muted px-0 py-1 mb-1'>\r\n          <div className={`d-none d-lg-block btn btn-sm btn-${status} text-white `}>{props.status}</div>\r\n          <div className=\" text-center font-weight-bold ml-2\">Buy {props.what}</div>\r\n        </div>\r\n        <div className='col-6 col-lg-4 pl-2 d-flex flex-column justify-content-around '>\r\n          <div className='border-bottom border-muted small'>\r\n            <div className='font-weight-bold'>Location &#9962;</div>\r\n            <div>{props.where}</div></div>\r\n          <div className='border-bottom border-muted small'>\r\n            <div className='font-weight-bold'>Due Time &#128359;</div>\r\n            <div>{moment(props.when).format('MMMM Do YYYY, h:mm:ss a')}</div></div>\r\n        </div>\r\n        <div className=\"col-6 col-lg-3 py-1 bg-white text-center d-flex flex-column justify-content-center\">\r\n          <div>\r\n            <h6 className='py-1'>Task Budget</h6>\r\n            <div className='h2'>${props.price}</div>\r\n          </div>\r\n          <div className=\"\">\r\n            {signInStatus.isSignIn ?\r\n              <button className='btn btn-success btn-sm' disabled={props.status !== \"OPEN\" || props.poster === signInStatus.username} onClick={() => { setConfirm(true) }}>Take the Task</button>\r\n              : <ModalButton target=\"signIn\">Take the Task</ModalButton>\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className='d-lg-none d-block small w-100 d-flex justify-content-between '>\r\n          <div className={`btn btn-sm  btn-${status} text-white `}>{props.status}</div>\r\n          <button className='btn btn-sm btn-info ' type='button' onClick={handleShowDetails}>Details</button>\r\n        </div>\r\n        <div className={`${!isShowDetails && 'd-none'} d-lg-block col-12 col-lg-5 small row`}>\r\n          <div className='col-12 col-sm-6 col-lg-12 p-0 small'>\r\n            <TaskContent content={props.poster}>Posted By</TaskContent>\r\n            <TaskContent content={moment(props.postedTime).format('MMMM Do YYYY, h:mm:ss a')}>Posted Time</TaskContent>\r\n          </div>\r\n          <div className='col-12 col-sm-6 col-lg-12 p-0 small'>\r\n            <TaskContent content={props.tasker}>Assigned To</TaskContent>\r\n            <TaskContent content={props.assignedTime && moment(props.assignedTime).format('MMMM Do YYYY, h:mm:ss a')}>Assigned Time</TaskContent>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      {confirm && <ConfirmModal url={`http://localhost:5000/task/${props._id}`} input={input} title='take the task' click={click} cancel={cancel} />}\r\n    </>\r\n\r\n  )\r\n}\r\nexport default TaskDetail","import * as React from 'react'\r\nimport TaskItem from './TaskItem'\r\ninterface IData {\r\n    poster: '',\r\n    posterId: '',\r\n    postedTime: '',\r\n    what: '',\r\n    where: '',\r\n    when: '',\r\n    price: '',\r\n    status: '',\r\n    tasker: '',\r\n    taskerId: '',\r\n    assignedTime: '',\r\n    _id: '',\r\n    completedTime: '',\r\n    reviews: ''\r\n}\r\ninterface IProps {\r\n    initTasks: IData[],\r\n    // isLoadingMoreData: boolean\r\n    // hasMoreTasks: boolean\r\n    // isLoadedMoreData:boolean\r\n}\r\nconst TaskList = (props: IProps) => {\r\n\r\n    const element = props.initTasks && props.initTasks.map((item) => {\r\n        return (\r\n            <TaskItem key={item._id} {...item} />\r\n        )\r\n    })\r\n    return (\r\n        <>\r\n            {element}\r\n        </>\r\n    )\r\n}\r\nexport default TaskList","import * as React from 'react'\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"d-flex justify-content-center\">\r\n            <div className=\"spinner-border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Loading;","import * as React from 'react'\r\nimport TaskNav from './TaskNav'\r\nimport API_Url from '../../constants/api'\r\nimport './style.css'\r\nimport { startUpdate, endUpdate } from '../../actions/updateAction'\r\nimport Loading from '../../components/Loading'\r\nimport { Update } from '../../context/context'\r\n//1.initial fetch get task list and searchBeforeId searchAfterId\r\n//-- store tasks list, searchBeforeId searchAfterId\r\n//pass tasklist to taks nav to render\r\n//2.next fetch  task list after searchAfterId\r\n//-- fetch with searchAfterId\r\n//-- store newTaskList, newtasknumber, pass newTasknumber to notification \r\n//-- \r\n//2.1 if new tasks give notification and click it to render new task\r\n//2.1.1 if click to get load new re-render task nav pass new , clear data here\r\n//2.2 2 if not click to get new task, \r\n//2.2 if no task, wait to init new tasks\r\nconst Tasks = () => {\r\n    const [initTaskList, setInitTaskList] = React.useState();\r\n    const [response, setResponse] = React.useState({ status: false, message: '' })\r\n\r\n    const [hasMoreTask, setHasMoreTask] = React.useState();\r\n    const [searchAfterId, setSearchAfterId] = React.useState();\r\n    const [searchBeforeId, setSearchBeforeId] = React.useState();\r\n    const [totalTask, setTotalTask] = React.useState(0);\r\n\r\n    const [isDataLoaded, setIsDataLoaded] = React.useState(false);\r\n    const [isDataLoading, setIsDataLoading] = React.useState(false);\r\n\r\n    const [isScrolled, setIsScrolled] = React.useState(0);\r\n    const [isMoreDataLoading, setIsMoreDataLoading] = React.useState(false);\r\n\r\n    const [newTaskList, setNewTaskList] = React.useState([]);\r\n    const [newTaskNumber, setNewTaskNumber] = React.useState(0);\r\n\r\n    const [checked, setChecked] = React.useState(false);\r\n    const [location, setLocation] = React.useState('')\r\n    const { update, updateDispatch } = React.useContext(Update)\r\n\r\n    let filter = '';\r\n    if (checked) {\r\n        filter = '&status=OPEN&'\r\n    }\r\n    //init datalist \r\n    const fetchData = async () => {\r\n        setInitTaskList([]);\r\n        setIsDataLoading(true);\r\n        setIsDataLoaded(false)\r\n        const result = await fetch(`${API_Url}/tasks?pageSize=4${filter}`, { method: 'get' });\r\n        const json = await result.json();\r\n        if (result.ok) {\r\n            setInitTaskList(json.data.tasks);\r\n            setResponse({ status: result.ok, message: json.message });\r\n            setSearchAfterId(json.data.meta.searchAfterId);\r\n            setSearchBeforeId(json.data.meta.searchBeforeId);\r\n            setHasMoreTask(json.data.meta.hasNext)\r\n            setTotalTask(json.data.length);\r\n            setIsDataLoaded(true);\r\n            setIsDataLoading(false)\r\n        } else {\r\n            setIsDataLoaded(true);\r\n            setIsDataLoading(false);\r\n            setResponse({ status: result.ok, message: json.message })\r\n        }\r\n    }\r\n    React.useEffect(() => {\r\n        if (update) {\r\n            updateDispatch(endUpdate)\r\n        }\r\n        fetchData();\r\n    }, [update])\r\n    const fetchNewData = async (searchAfterId: string) => {\r\n        if (!searchAfterId) { return }\r\n        const result = await fetch(`${API_Url}/tasks?searchAfterId=${searchAfterId}${filter}`, { method: 'get' });\r\n        const json = await result.json();\r\n        if (result.ok) {\r\n            setNewTaskList(json.data.tasks.concat(newTaskList));\r\n            setNewTaskNumber((s) => s + json.data.meta.total);\r\n            setSearchAfterId(json.data.meta.searchAfterId);\r\n        }\r\n    }\r\n    React.useEffect(() => {\r\n        const fresh = setInterval(() => {\r\n            fetchNewData(searchAfterId)\r\n        }, 10000);\r\n        return function clear() {\r\n            clearInterval(fresh)\r\n        }\r\n    }\r\n    )\r\n    const addNewTasks = () => {\r\n        setInitTaskList([...newTaskList, ...initTaskList])\r\n        setNewTaskNumber(0);\r\n        setNewTaskList([])\r\n        setTotalTask(initTaskList.length)\r\n    }\r\n    const fetchMoreData = async (searchBeforeId: string) => {\r\n        setIsMoreDataLoading(true);\r\n        const result = await fetch(`${API_Url}/tasks?pageSize=2&searchBeforeId=${searchBeforeId}${filter}`, { method: 'get' });\r\n        const json = await result.json();\r\n        if (result.ok) {\r\n            setSearchBeforeId(json.data.meta.searchBeforeId);\r\n            setTotalTask(initTaskList.length);\r\n            setTimeout(() => {\r\n                setInitTaskList([...initTaskList, ...json.data.tasks]);\r\n                setHasMoreTask(json.data.meta.hasNext);\r\n                setIsMoreDataLoading(false);\r\n            }, 1000)\r\n        } else {\r\n            setHasMoreTask(false)\r\n            setIsMoreDataLoading(false);\r\n        }\r\n    }\r\n\r\n\r\n    const elem = document.getElementsByClassName('task-item-container')[0]\r\n    const handleScroll = () => {\r\n        setIsScrolled(elem.scrollTop);\r\n        if (!isMoreDataLoading) {\r\n            if (elem.scrollTop + elem.clientHeight > elem.scrollHeight - 1) {\r\n                if (hasMoreTask) {\r\n                    fetchMoreData(searchBeforeId);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const backToTop = () => {\r\n        elem.scrollTop = 0;\r\n        setIsScrolled(0)\r\n    }\r\n    React.useEffect(() => {\r\n        document.getElementsByClassName('task-item-container')[0].addEventListener('scroll', handleScroll);\r\n        return function clear() {\r\n            document.getElementsByClassName('task-item-container')[0].removeEventListener('scroll', handleScroll);\r\n        }\r\n    })\r\n    const handleFilter = () => {\r\n        \r\n        updateDispatch(startUpdate)\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"custom-control custom-checkbox d-flex align-items-center text-center justify-content-around\">\r\n                <input type=\"checkbox\" checked={checked} onChange={() => { setChecked((pre) => !pre); handleFilter(); }} className=\"custom-control-input\" id=\"customCheck1\" />\r\n                <label className=\"custom-control-label \" htmlFor=\"customCheck1\">Show OPEN Only</label>\r\n            </div>\r\n            {newTaskNumber > 0 && <button className='alert alert-info tasks-new' onClick={addNewTasks}>{newTaskNumber} NEW TASKS</button>}\r\n            <div className=\"task-item-container\" id=\"task-item-container\">\r\n                {isScrolled > 0 && <button className='btn btn-sm btn-primary tasks-top' onClick={backToTop}>Top</button>}\r\n                {isDataLoading && !isDataLoaded && <Loading />}\r\n                {response.status && <TaskNav initTasks={initTaskList} />}\r\n                {isDataLoaded && <div className=\"tasks-loading border rounded shadow-sm bg-white font-weight-bold text-center mx-2 h6\">\r\n                    {hasMoreTask ? <Loading /> : <div>no more tasks</div>}\r\n                </div>}\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default Tasks","import * as React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\ntype Props = {\r\n    what: string;\r\n    _id: string;\r\n    where: string;\r\n    when: string;\r\n    price: string;\r\n    status: string;\r\n}\r\nconst TaskLabel: React.FunctionComponent<Props> = (props) => {\r\n    return (\r\n        <div className='bg-light px-2' key={props._id}>\r\n            <span className='small text-left'>Task_Id: <Link to={`/task/${props._id}`} className='ml-2'>{props._id}</Link></span>\r\n            <div className=\"d-flex justify-content-start align-items-center\">\r\n                <div className=\"ml-2 font-weight-bold\" style={{\"fontSize\":\"18px\"}}>Buy {props.what}</div>\r\n            </div>\r\n            <div className=\"small text-dark d-block d-sm-flex justify-content-between align-items-center\">\r\n                <div className={`text-right small font-weight-bold`}>Locaton: {props.where}</div>\r\n                <div className={`text-left font-weight-bold small`}>Due at: {moment(props.when).format('MMMM Do YYYY, h:mm:ss a')}</div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default TaskLabel","import * as React from 'react';\r\nimport ConfirmModal from '../../components/Modal/ConfirmModal'\r\nimport { SignInStatus } from '../../context/context'\r\nimport ReviewMaker from '../TaskDetail/ReviewMaker'\r\nimport { Link } from 'react-router-dom'\r\ninterface IProp {\r\n    status: string;\r\n    _id: string;\r\n    role: string;\r\n}\r\n\r\nconst TaskTag = (props: IProp) => {\r\n    let action;\r\n    let method;\r\n    let status;\r\n    switch (props.status) {\r\n        case 'OPEN':\r\n            action = 'CANCEL';\r\n            method = 'delete';\r\n            status = 'bg-success'\r\n            break\r\n        case 'ASSIGNED':\r\n            action = 'DONE';\r\n            method = 'put';\r\n            status = 'bg-warning';\r\n            break\r\n        case 'DONE':\r\n            action = 'COMPLETED';\r\n            method = 'put'\r\n            status = 'bg-danger'\r\n            break\r\n        case 'COMPLETED':\r\n            action = 'REVIEW'\r\n            status = 'bg-dark'\r\n            break\r\n    }\r\n    const { signInStatus, } = React.useContext(SignInStatus)\r\n    const input = { method: method, body: JSON.stringify({ status: action, userId: signInStatus.userId }), headers: { 'Content-Type': 'application/json' } }\r\n    const [confirm, setConfirm] = React.useState(false);\r\n    const click = () => {\r\n        setConfirm(false);\r\n    }\r\n    const cancel = () => {\r\n        setConfirm(false);\r\n    }\r\n    const [review, setReview] = React.useState(false);\r\n    const createReview = async () => {\r\n        const result = await fetch(`http://localhost:5000/review`, { body: JSON.stringify({ taskId: props._id }), method: 'post', headers: { 'Content-Type': 'application/json' } })\r\n        await result.json();\r\n        if (result.ok) {\r\n            setReview(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='d-flex justify-content-between px-2'>\r\n            <div className={`${status} btn btn-sm text-white font-weight-bold`}>{props.status}</div>\r\n            <div className=''>\r\n                {props.status === 'OPEN' && <button className={`${status} btn btn-sm text-white font-weight-bold`} onClick={() => { setConfirm(true); }}>{action}</button>}\r\n                {props.status === 'ASSIGNED' && props.role === 'tasker' && <button className={`${status} btn btn-sm text-white font-weight-bold`} onClick={() => { setConfirm(true); }}>{action}</button>}\r\n                {props.status === 'DONE' && props.role === 'poster' && <button className={`${status} btn btn-sm text-white font-weight-bold`} onClick={() => { setConfirm(true); }}>{action}</button>}\r\n                {props.status === 'COMPLETED' && <button className={`${status} btn btn-sm text-white font-weight-bold`} onClick={createReview}>{action}</button>}\r\n            </div>\r\n            {review &&\r\n                <div className='modal-container small'>\r\n                    <div className='confirm-container d-flex flex-column justify-content-around bg-white text-center py-2'>\r\n                        <h4>Go to TaskDetail to Review</h4>\r\n                        <div className='d-flex justify-content-around'>\r\n                            <Link className=\"btn btn-primary btn-sm text-center text-white text-decoration-none\" to={`/task/${props._id}`} >Go</Link>\r\n                            <button className='btn btn-danger btn-sm text-center text-white' onClick={() => { setReview(false) }} >Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n            {confirm &&\r\n                <ConfirmModal url={`http://localhost:5000/task/${props._id}`} input={input} title={`${action} the task`} click={click} cancel={cancel} />}\r\n        </div>\r\n    )\r\n}\r\nexport default TaskTag","import * as React from 'react';\r\nimport TaskLabel from './TaskLabel'\r\nimport TaskTag from './TaskTag'\r\n\r\ninterface IProps {\r\n    data: IData[]\r\n    role: string;\r\n}\r\n\r\ninterface IData {\r\n    poster: '',\r\n    posterId: '',\r\n    postedTime: '',\r\n    what: '',\r\n    where: '',\r\n    when: '',\r\n    price: '',\r\n    status: '',\r\n    tasker: '',\r\n    taskerId: '',\r\n    assignedTime: '',\r\n    _id: '',\r\n    completedTime: '',\r\n    reviews: ''\r\n}\r\n\r\nconst TaskList = (props: IProps) => {\r\n    const element = props.data && props.data.map((item) => {\r\n        return (\r\n            <div className='py-1 mt-1  mytask-list-item  bg-light border ' key={item._id}>\r\n                <TaskLabel  {...item} />\r\n                <TaskTag _id={item._id} status={item.status} role={props.role} />\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <>\r\n            {element}\r\n        </>\r\n\r\n    )\r\n}\r\nexport default TaskList","import * as React from 'react'\r\ninterface IProps {\r\n    click: (i: number) => void,\r\n    currentPage: string,\r\n    pageSize: number,\r\n    total: number,\r\n    hasNext: boolean,\r\n    hasPrev: boolean,\r\n}\r\nconst Pagination = (props: IProps) => {\r\n    const handleNextPage = () => {\r\n        props.click(parseInt(props.currentPage) + 1)\r\n    }\r\n    const handlePrevPage = () => {\r\n        props.click(parseInt(props.currentPage) - 1)\r\n    }\r\n    return (\r\n        <nav>\r\n            <ul className='pagination'>\r\n                {<li className='page-item'><button disabled={!props.hasPrev} className=\"page-link\" onClick={(e) => { e.preventDefault(); handlePrevPage() }} ><span>&laquo;</span></button></li>}\r\n                {props.hasPrev && <li className='page-item'><button disabled={!props.hasPrev} className=\"page-link\" onClick={(e) => { e.preventDefault(); handlePrevPage() }} >{parseInt(props.currentPage) - 1}</button></li>}\r\n                {<li className='page-item active'><button disabled className=\"page-link\" >{props.currentPage}</button></li>}\r\n                {props.hasNext && <li className='page-item'><button disabled={!props.hasNext} className=\"page-link\" onClick={(e) => { e.preventDefault(); handleNextPage() }} >{parseInt(props.currentPage) + 1}</button></li>}\r\n                {<li className='page-item'><button disabled={!props.hasNext} className=\"page-link\" onClick={(e) => { e.preventDefault(); handleNextPage() }}>&raquo;</button></li>}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\nexport default Pagination;","import * as React from 'react'\r\nimport TaskList from './TaskList'\r\nimport API_Url from '../../constants/api'\r\nimport Pagination from './Pagination'\r\nimport './style.css'\r\nimport { startUpdate, endUpdate } from '../../actions/updateAction'\r\nimport Loading from '../../components/Loading'\r\nimport { Update } from '../../context/context'\r\ninterface Pagination {\r\n    currentPage: string,\r\n    pageSize: number,\r\n    total: number,\r\n    hasNext: boolean,\r\n    hasPrev: boolean,\r\n}\r\nconst defaultPagination = {\r\n    currentPage: '1',\r\n    pageSize: 4,\r\n    total: 0,\r\n    hasNext: false,\r\n    hasPrev: false,\r\n}\r\nconst Mytasks = () => {\r\n    const [isDataLoaded, setIsDataLoaded] = React.useState(false);\r\n    const [isDataLoading, setIsDataLoading] = React.useState(false);\r\n    const [data, setData] = React.useState();\r\n    const [response, setResponse] = React.useState({ status: false, message: '' })\r\n    const [pagination, setPagination] = React.useState<Pagination>(defaultPagination)\r\n\r\n    const [page, setPage] = React.useState(1);\r\n    const [pageSize, setPageSize] = React.useState(4)\r\n    const [role, setRole] = React.useState('poster')\r\n    const [filter, setFilter] = React.useState('ALL')\r\n\r\n    const { update, updateDispatch } = React.useContext(Update)\r\n\r\n    const fetchData = async () => {\r\n        if (update) { updateDispatch(endUpdate) }\r\n        setIsDataLoaded(false);\r\n        setIsDataLoading(true);\r\n        const result = await fetch(`${API_Url}/profile?role=${role}&status=${filter}&page=${page}&pageSize=${pageSize}`, { method: 'get', credentials: 'include' })\r\n        const resultJson = await result.json();\r\n        if (result.ok) {\r\n            setData(resultJson.data.tasks);\r\n            setPagination(resultJson.data.pagination);\r\n            setResponse({ status: result.ok, message: resultJson.message });\r\n            setIsDataLoaded(true);\r\n            setIsDataLoading(false);\r\n        } else {\r\n            setIsDataLoaded(true);\r\n            setIsDataLoading(false);\r\n            setResponse({ status: result.ok, message: resultJson.message });\r\n        }\r\n    }\r\n    React.useEffect(\r\n        () => { fetchData() }\r\n        , [filter, role, page, update])\r\n    const refresh = () => {\r\n        setResponse({ status: false, message: '' })\r\n        setPage(1);\r\n    }\r\n    return (\r\n            <div className='task-item-container'>\r\n                <nav className='d-flex justify-content-around align-items-center'>\r\n                    <ul className=\"nav nav-pills bg-light py-2\" id=\"myTab\" role=\"tablist\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" id=\"poster-tab\" data-toggle=\"tab\" href=\"#poster\" role=\"tab\" aria-controls=\"poster\" aria-selected=\"true\" onClick={(e) => { e.preventDefault(); refresh(); setRole('poster'); }}>Poster</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" id=\"tasker-tab\" data-toggle=\"tab\" href=\"#tasker\" role=\"tab\" aria-controls=\"tasker\" aria-selected=\"false\" onClick={(e) => { e.preventDefault(); refresh(); setRole('tasker'); }}>Tasker</a>\r\n                        </li>\r\n                    </ul>\r\n                    <select className=\"w-50 form-control form-control-sm \" value={filter} onChange={(e) => { refresh(); setFilter(e.target.value); }}>\r\n                        <option value=\"ALL\">All Tasks</option>\r\n                        <option value=\"PENDING\">Pending Tasks</option>\r\n                        <option value=\"COMPLETED\">Completed Tasks</option>\r\n                    </select>\r\n                </nav>\r\n                <Pagination {...pagination} click={(i: number) => { setPage(i) }} />\r\n                {isDataLoading && !isDataLoaded && <Loading />}\r\n                {!isDataLoading && isDataLoaded && response.status && <TaskList data={data} role={role} /> }\r\n                {!isDataLoading && isDataLoaded && !response.status && <div>not any tasks yet</div> }\r\n            </div>\r\n    )\r\n}\r\nexport default Mytasks","import * as React from 'react'\r\nimport moment from 'moment'\r\nimport TaskContent from '../BrowseTasks/TaskContent'\r\nimport API_Url from '../../constants/api'\r\nimport { isDate } from 'util';\r\ninterface IData {\r\n    poster: string,\r\n    posterId: string,\r\n    postedTime: string,\r\n    what: string,\r\n    where: string,\r\n    when: string,\r\n    price: string,\r\n    status: string,\r\n    tasker: string,\r\n    taskerId: string,\r\n    assignedTime: string,\r\n    _id: string,\r\n    completedTime: string,\r\n    reviews: string\r\n}\r\ninterface IProp {\r\n    match: {\r\n        params: {\r\n            id: string\r\n        }\r\n    }\r\n}\r\nconst TaskDetail = (props: IProp) => {\r\n    const [confirm, setConfirm] = React.useState(false)\r\n    const [data, setData] = React.useState()\r\n    const [response, setResponse] = React.useState();\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n    const [isLoaded, setIsLoaded] = React.useState(false)\r\n    const fetchTasks = async () => {\r\n        setIsLoading(true);\r\n        setIsLoaded(false);\r\n        const response = await fetch(`${API_Url}/task/${props.match.params.id}`, { method: 'get' });\r\n        const result = await response.json();\r\n        setData(result.data);\r\n        setResponse(response.ok);\r\n        setIsLoaded(true);\r\n        setIsLoading(false);\r\n    }\r\n    React.useEffect(() => { fetchTasks() }, [])\r\n    return (\r\n        <>\r\n\r\n            {isLoaded && response &&\r\n                <div className='task-item-container bg-white mx-auto p-2'>\r\n                    <div className={`alert bg-info text-white text-center`}>{data.status}</div>\r\n                    <div className=\"h4 text-center text-info font-weight-normal\">{data.what}</div>\r\n                    <div className='d-md-flex'>\r\n                        <div className='border border-muted rounded  mx-auto small p-1 m-2'>\r\n                            <TaskContent content={data.price}>$ Price </TaskContent>\r\n                            <TaskContent content={''}>Location</TaskContent>\r\n                            <TaskContent content={data.where}>&#9962; </TaskContent>\r\n                            <TaskContent content={''}> Due</TaskContent>\r\n                            <TaskContent content={moment(data.when).format('MMMM Do YYYY, h:mm:ss a')}>&#128359;</TaskContent>\r\n                            <TaskContent content={''}>Completed Time </TaskContent>\r\n                            <TaskContent content={data.completedTime && moment(data.completedTime).format('MMMM Do YYYY, h:mm:ss a')}>&#128359; </TaskContent>\r\n                        </div>\r\n                            <div className='mx-auto small border border-muted rounded p-1 m-2'>\r\n                                <TaskContent content={''}>Posted By</TaskContent>\r\n                                <a href=\"\"><TaskContent content={data.poster}></TaskContent></a>\r\n                                <TaskContent content={''}>Posted Time</TaskContent>\r\n                                <TaskContent content={moment(data.postedTime).format('MMMM Do YYYY, h:mm:ss a')}></TaskContent>\r\n                            </div>\r\n                            <div className='mx-auto small border border-muted rounded p-1 m-2'>\r\n                                <TaskContent content={data.tasker}>Assigned To</TaskContent>\r\n                                <a href=\"\"><TaskContent content={data.tasker}></TaskContent></a>\r\n                                <TaskContent content={''}>Assigned Time </TaskContent>\r\n                                <TaskContent content={moment(data.assignedTime).format('MMMM Do YYYY, h:mm:ss a')}></TaskContent>\r\n                            </div>\r\n                    </div>\r\n                    {data.review &&\r\n                        <div></div>\r\n                    }\r\n\r\n                </div>\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\nexport default TaskDetail","import * as React from 'react'\r\nimport {Route,Redirect} from 'react-router-dom'\r\nimport {SignInStatus} from '../context/context'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    const {signInStatus} = React.useContext(SignInStatus);\r\n    return(\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        signInStatus.isSignIn ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/app\",\r\n              state: { from: props.location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );}\r\n\r\nexport default PrivateRoute","import * as React from 'react'\r\nexport default function usePostData<IResponse>(initialResponse: IResponse): [IResponse, () => void, (url: string, option: object) => void] {\r\n    const [response, setResponse] = React.useState<IResponse>(initialResponse)\r\n    const postData = async (url: string, option: {}) => {\r\n        const result = await fetch(url, { method: 'post', credentials: \"include\", headers: { 'Content-Type': 'application/json' }, ...option })\r\n        const response = await result.json()\r\n        setResponse({ ...response, status: true })\r\n    }\r\n    const triggerPost = async (url: string, option: object) => {\r\n        await postData(url, option);\r\n    }\r\n    const resetResponse = () => {\r\n        setResponse(initialResponse)\r\n    }\r\n    return [response, resetResponse, triggerPost]\r\n}","import * as React from 'react'\r\ninterface IChange  {\r\n    (e:React.ChangeEvent<HTMLInputElement|HTMLTextAreaElement>):void\r\n}\r\n\r\nfunction useChangeInput<T>(initialValue:T):[T,IChange,React.Dispatch<React.SetStateAction<T>>]{\r\n    const [input,setInput] = React.useState(initialValue)\r\n    const handleChange:IChange = (e)=>{\r\n        const name = e.target.name;\r\n        const value =  e.target.value;\r\n        const newInput = {[name]:value}\r\n        setInput((prev)=>{return {...prev,...newInput}})\r\n    }\r\n    return [input,handleChange,setInput]\r\n}\r\nexport default useChangeInput","import * as React from 'react'\r\nimport * as yup from 'yup'\r\n\r\ninterface IValidation {\r\n    error:boolean;\r\n    message:string[]|string\r\n}\r\nexport default function useValidation<T>(input:T,schema:yup.Schema<T>):[IValidation,()=>object|boolean,React.Dispatch<React.SetStateAction<IValidation>>]{\r\n    const [validation,setValidation] = React.useState<IValidation>({error:false,message:''})\r\n    const validate = async()=>{\r\n        try {\r\n            const result = await schema.validate(input)\r\n            return result \r\n        } catch (error) {\r\n            setValidation({error:true,message:error.errors})\r\n            return false\r\n        }\r\n    }\r\n    return [validation,validate,setValidation]\r\n}","import * as React from 'react'\r\nimport * as yup from 'yup'\r\nimport { SignInStatus, ToggleModal } from '../../context/context'\r\nimport usePostData from '../../hooks/usePostData'\r\nimport useChangeInput from '../../hooks/useChangeInput'\r\nimport AlertModal from '../../components/Modal/AlertModal'\r\nimport useValidation from '../../hooks/useValidation'\r\nimport API_Url from '../../constants/api'\r\nimport './style.css'\r\nconst schema = yup.object().shape({\r\n    content: yup.string().required().min(10),\r\n    rating: yup.number().required().moreThan(0)\r\n})\r\nconst initialResponse = {\r\n    data: {\r\n        content: '',\r\n        rating: 0\r\n    },\r\n    status: false,\r\n    message: ''\r\n}\r\ntype Review = {\r\n    content: string,\r\n    rating: number,\r\n\r\n}\r\ntype Props = {\r\n    reviewId: string;\r\n    role: string;\r\n}\r\nconst UserAccount: React.FunctionComponent<Props> = (props) => {\r\n    const { signInStatus, signInDispatch } = React.useContext(SignInStatus);\r\n    const { modalStatus, modalDispatch } = React.useContext(ToggleModal)\r\n    const [response, resetResponse, setTrigger] = usePostData(initialResponse)\r\n    const reviewContent = React.useRef()\r\n    const [input, handleChange, setInput] = useChangeInput<Review>({\r\n        content: '',\r\n        rating: 0\r\n    });\r\n    const [validation, validate, setValidation] = useValidation(input, schema)\r\n    const handleReview = async () => {\r\n        setTrigger(`${API_Url}/user`, { body: JSON.stringify({ ...input, action: 'signIn' }) })\r\n    }\r\n    const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        e.preventDefault();\r\n        const result = await validate();\r\n        if (result) { handleReview() }\r\n    }\r\n    return (\r\n        <div className='modal-container'>\r\n            <div className='review-container mx-auto bg-white p-1'>\r\n                <div>Review as {props.role}</div>\r\n                <div className='d-flex flex-column flex-md-row justify-content-between'>\r\n                    <textarea name=\"content\" className='form-control' cols={3} rows={3} value={input.content} onChange={handleChange}></textarea>\r\n                    <div className='d-flex flex-column justify-content-between p-1'>\r\n                        <div className='w-50 d-flex flex-row-reverse justify-content-end'>\r\n                            <input type=\"radio\" id='rating-input5' name='rating' className='rating-input' value={5} onChange={handleChange} />\r\n                            <label htmlFor=\"rating-input5\" className='rating-star'>★</label>\r\n                            <input type=\"radio\" id='rating-input4' name='rating' className='rating-input' value={4} onChange={handleChange} />\r\n                            <label htmlFor=\"rating-input4\" className='rating-star'>★</label>\r\n                            <input type=\"radio\" id='rating-input3' name='rating' className='rating-input' value={3} onChange={handleChange} />\r\n                            <label htmlFor=\"rating-input3\" className='rating-star'>★</label>\r\n                            <input type=\"radio\" id='rating-input2' name='rating' className='rating-input' value={2} onChange={handleChange} />\r\n                            <label htmlFor=\"rating-input2\" className='rating-star'>★</label>\r\n                            <input type=\"radio\" id='rating-input1' name='rating' className='rating-input' value={1} onChange={handleChange} />\r\n                            <label htmlFor=\"rating-input1\" className='rating-star'>★</label>\r\n                        </div>\r\n                        <div>Rating {input.rating}</div>\r\n                        <div className='d-flex justify-content-between'>\r\n                            <button className='btn btn-sm btn-primary' onClick={handleSubmit}>Submit</button>\r\n                            <button className='btn btn-sm ml-1 btn-danger'>Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {validation.error && <AlertModal message={validation.message[0]} confirm={() => { setValidation({ error: false, message: '' }); }} clear={() => { setValidation({ error: false, message: '' }); setInput(initialResponse.data); }} />}\r\n                {/* {response.status && <AlertModal message={response.message} confirm={handleResponse} clear={handleResponse} />} */}\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default UserAccount","import * as React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport BrowseTasks from '../BrowseTasks/TaskPage'\r\nimport MyTasks from '../MyTasks/MyTasks'\r\nimport TaskDetail from '../TaskDetail/TaskDetailsPage'\r\nimport PrivateRoute from '../../components/PrivateRoute';\r\nimport ReviewMaker from '../TaskDetail/ReviewMaker'\r\nconst Routes: React.FunctionComponent = () => {\r\n    return (\r\n        <div className='app-content'>\r\n            <div className='tasks-container'>\r\n                <Switch >\r\n                    <Route exact path='/' component={BrowseTasks} />\r\n                    <Route exact path='/tasks' component={BrowseTasks} />\r\n                    <Route exact path='/task/:id' component={TaskDetail} />\r\n                    <PrivateRoute exact path='/mytasks' component={MyTasks} />\r\n                    <Route exact path='/review' component={ReviewMaker} />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Routes","import * as React from 'react'\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\nimport Header from './Header'\r\nimport Routes from './Route'\r\nconst Main = ()=>{\r\n    return(\r\n        <Router >\r\n            <React.Fragment>\r\n                <Header />\r\n                <Routes />\r\n            </React.Fragment>\r\n        </Router>\r\n        \r\n    )\r\n}\r\nexport default Main\r\n","import * as React from 'react'\r\nimport * as yup from 'yup'\r\nimport $ from 'jquery'\r\nimport useValidation from '../../hooks/useValidation'\r\nimport useChangeInput from '../../hooks/useChangeInput'\r\nimport AlertModal from '../../components/Modal/AlertModal'\r\ninterface Iprops {\r\n    what:string;\r\n    price:number\r\n    handleStep: (t: number) => void;\r\n    handleWhat: (t: string) => void;\r\n    handlePrice: (t: number) => void;\r\n}\r\ninterface IInput {\r\n    price: number;\r\n    what: string;\r\n}\r\nconst schema = yup.object().shape({\r\n    what: yup.string().required().min(6),\r\n    price: yup.number().required().moreThan(2, 'pay more than $2 please'),\r\n})\r\n\r\nconst defaultInput = {\r\n    price: 0,\r\n    what: '',\r\n}\r\nconst WhatAndHowMuch = (props: Iprops) => {\r\n    const [input, handleChange, setInput] = useChangeInput<IInput>({price:props.price,what:props.what})\r\n    const [validation, validate, setValidation] = useValidation(input, schema)\r\n    const handleNext = async () => {\r\n        const result = await validate()\r\n        if (!result) return\r\n        props.handlePrice(input.price);\r\n        props.handleWhat(input.what)\r\n        props.handleStep(1);\r\n    }\r\n    return (\r\n        <div className='py-2'>\r\n            <div className=\"progress\">\r\n                <div className=\"progress-bar bg-success\" role=\"progressbar\" style={{ \"width\": \"33%\" }} aria-valuenow={33} aria-valuemin={0} aria-valuemax={100}></div>\r\n\r\n            </div>\r\n            <form action=\"\" className='d-flex flex-column' >\r\n                <label htmlFor=\"what\" className=\"small font-weight-bold mt-2\">What do you need to buy?</label>\r\n                <input type=\"text\" id='what' name='what' className={`p-0 form-control form-control-sm`} value={input.what} onChange={handleChange} />\r\n                <label htmlFor=\"price\" className=\"small font-weight-bold mt-2\">How much do you pay?</label>\r\n                <input type=\"number\" min=\"2\" id='price' name='price' className={`small w-25 p-0 form-inline form-control form-control-sm`} value={input.price} onChange={handleChange} />\r\n                <button className='btn btn-sm btn-success mt-2' type=\"button\" onClick={handleNext}>Next</button>\r\n            </form>\r\n            {validation.error && <AlertModal message={validation.message[0]} confirm={() => { setValidation({ error: false, message: '' }); }} clear={() => { setValidation({ error: false, message: '' }); setInput(defaultInput); }} />}\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default WhatAndHowMuch","import * as React from 'react'\r\nimport * as yup from 'yup'\r\nimport moment from 'moment'\r\nimport useValidation from '../../hooks/useValidation'\r\nimport useChangeInput from '../../hooks/useChangeInput'\r\nimport AlertModal from '../../components/Modal/AlertModal'\r\ninterface IProps {\r\n    when: string;\r\n    where: string;\r\n    handleStep: (t: number) => void;\r\n    handleWhen: (t: string) => void;\r\n    handleWhere: (t: string) => void;\r\n}\r\n\r\ninterface Iinput {\r\n    when: string;\r\n    where: string;\r\n}\r\nconst schema = yup.object().shape({\r\n    when: yup.string().required(),\r\n    where: yup.string().required()\r\n})\r\n\r\nconst defaultInput = {\r\n    where: '',\r\n    when: '',\r\n}\r\nconst WhenAndWhere = (props: IProps) => {\r\n    const [input, handleChange, setInput] = useChangeInput<Iinput>({ when: props.when, where: props.where })\r\n    const [validation, validate, setValidation] = useValidation(input, schema)\r\n    const handleNext = async () => {\r\n        const result = await validate()\r\n        if (!result) return\r\n        props.handleWhen(input.when);\r\n        props.handleWhere(input.where)\r\n        props.handleStep(2);\r\n    }\r\n    const handleBack = () => {\r\n        props.handleStep(0)\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"progress\">\r\n                <div className=\"progress-bar bg-success\" role=\"progressbar\" style={{ \"width\": \"66%\" }} aria-valuenow={66} aria-valuemin={0} aria-valuemax={100}></div>\r\n            </div>\r\n            <form action=\"\" className='px-3 d-flex flex-column' >\r\n                <label htmlFor=\"when\" className=\"small font-weight-bold mt-2\">When do you need it?</label>\r\n                <input type=\"datetime-local\" id='when' name='when' className={`p-0 form-control form-control-sm`} value={input.when} onChange={handleChange} />\r\n                <label htmlFor=\"where\" className=\"small font-weight-bold mt-2\">Where will it be send?</label>\r\n                <input type=\"text\" id='where' name='where' className={`p-0 form-control form-control-sm`} value={input.where} onChange={handleChange} />\r\n                <small className='text-muted'>suggest surburb only</small>\r\n                <div className='d-flex mt-2 justify-content-around'>\r\n                    <button className='btn btn-sm btn-secondary' type=\"button\" onClick={handleBack}>Back</button>\r\n                    <button className='btn btn-sm btn-success' type=\"button\" onClick={handleNext}>Next</button>\r\n                </div>\r\n            </form>\r\n            {validation.error && <AlertModal message={validation.message[0]} confirm={() => { setValidation({ error: false, message: '' }); }} clear={() => { setValidation({ error: false, message: '' }); setInput(defaultInput); }} />}\r\n\r\n        </div >\r\n    )\r\n}\r\nexport default WhenAndWhere","import * as React from 'react'\r\nimport { SignInStatus, ToggleModal } from '../../context/context'\r\nimport usePostData from '../../hooks/usePostData'\r\nimport API_Url from '../../constants/api'\r\nimport { hideModal } from '../../actions/showModalAction'\r\nimport AlertModal from '../../components/Modal/AlertModal'\r\ninterface Iprops {\r\n    handleStep: (t: number) => void;\r\n    task: {\r\n        what: string;\r\n        price: number;\r\n        where: string;\r\n        when: string;\r\n    }\r\n}\r\nconst initialResponse = {\r\n    data: [],\r\n    status: false,\r\n    message: ''\r\n}\r\nconst ReviewAndSubmit = (props: Iprops) => {\r\n    const { signInStatus, } = React.useContext(SignInStatus)\r\n    const { modalStatus, modalDispatch } = React.useContext(ToggleModal)\r\n    const [response, resetResponse, setTrigger] = usePostData(initialResponse)\r\n    const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        e.preventDefault();\r\n        const body = {\r\n            posterId: signInStatus.userId,\r\n            poster: signInStatus.username,\r\n            ...props.task,\r\n        }\r\n        setTrigger(`${API_Url}/task`, {  body: JSON.stringify(body)})\r\n    }\r\n\r\n    const handleBack = () => {\r\n        props.handleStep(1)\r\n    }\r\n    const handleResponse = () => {\r\n        resetResponse();\r\n        modalDispatch(hideModal('postATask'));\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"progress\">\r\n                <div className=\"progress-bar bg-success\" role=\"progressbar\" style={{ \"width\": \"100%\" }} aria-valuenow={100} aria-valuemin={0} aria-valuemax={100}></div>\r\n            </div>\r\n            <div>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item small \"><span className='font-weight-bold'>What</span> {props.task.what}</li>\r\n                    <li className=\"list-group-item small \"><span className='font-weight-bold'>Price</span> {props.task.price}</li>\r\n                    <li className=\"list-group-item small \"><span className='font-weight-bold'>Where</span> {props.task.where}</li>\r\n                    <li className=\"list-group-item small \"><span className='font-weight-bold'>When</span> {props.task.when}</li>\r\n                </ul>\r\n            </div>\r\n            <div className='d-flex mt-2 justify-content-around'>\r\n                <button className='btn btn-sm btn-secondary' type=\"button\" onClick={handleBack}>Back</button>\r\n                <button className='btn btn-sm btn-success ' type=\"submit\" onClick={handleSubmit}>Post</button>\r\n            </div>\r\n            {response.status  && <AlertModal message={response.message} confirm={handleResponse} clear={handleResponse} />}\r\n        </div >\r\n    )\r\n}\r\nexport default ReviewAndSubmit","import * as React from 'react'\r\nimport { hideModal } from '../../actions/showModalAction'\r\nimport { SignInStatus, ToggleModal } from '../../context/context'\r\nimport './style.css'\r\nimport WhatAndHowMuch from './WhatAndHowMuch'\r\nimport WhenAndWhere from './WhenAndWhere'\r\nimport ReviewAndSubmit from './ReviewAndSubmit'\r\ntype Step = number\r\n\r\nconst PostAtask: React.FunctionComponent = () => {\r\n    const { modalStatus, modalDispatch } = React.useContext(ToggleModal)\r\n    const [what, setWhat] = React.useState<string>('');\r\n    const [price, setPrice] = React.useState<number>(0)\r\n    const [where, setWhere] = React.useState<string>('')\r\n    const [when, setWhen] = React.useState<string>('')\r\n    const [step, setStep] = React.useState<Step>(0)\r\n    const [alert, setAlert] = React.useState(false)\r\n\r\n    const task = { what: what, when: when, where: where, price: price }\r\n\r\n    const cancelTask = () => {\r\n        modalDispatch(hideModal('postATask'))\r\n    }\r\n    const continueTask = () => {\r\n        setAlert(false)\r\n    }\r\n    return (\r\n        <div className='post-content mx-auto bg-white p-2'>\r\n            <div className='d-flex align-items-center justify-content-between font-weight-bold'>\r\n                {step === 0 && <span className='text-center flex-grow-1'>What and How Much</span>}\r\n                {step === 1 && <span className='text-center flex-grow-1'>When and Where</span>}\r\n                {step === 2 && <span className='text-center flex-grow-1'>Check and Post!</span>}\r\n                <a className='h2' onClick={(e) => { e.preventDefault(); setAlert(true) }}>&times;</a>\r\n            </div>\r\n            {step === 0 && <WhatAndHowMuch what={what} price={price} handleStep={(i) => { setStep(i) }} handleWhat={(i) => { setWhat(i) }} handlePrice={(i) => { setPrice(i) }} />}\r\n            {step === 1 && <WhenAndWhere when={when} where={where} handleStep={(i) => { setStep(i) }} handleWhen={(i) => { setWhen(i) }} handleWhere={(i) => { setWhere(i) }} />}\r\n            {step === 2 && <ReviewAndSubmit task={task} handleStep={(i) => { setStep(i) }} />}\r\n            {alert &&\r\n                <div className='task-alert-container small'>\r\n                    <div className='task-alert-content bg-white text-center py-2'>\r\n                        <h4>Sorry to see you leave</h4>\r\n                        <p>Are you sure? You almost done !</p>\r\n                        <div className='d-flex justify-content-around'>\r\n                            <button className='btn btn-primary btn-sm text-center text-white' onClick={continueTask} >Continue Task</button>\r\n                            <button className='btn btn-danger btn-sm text-center text-white' onClick={cancelTask} >Cancel Task</button>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default PostAtask","import * as React from 'react'\r\ntype Props = {\r\n    content:string;\r\n    type:string;\r\n    title:string;\r\n    input:string;\r\n    size?:string;\r\n    change:React.ChangeEventHandler\r\n\r\n}\r\nconst FormGroup:React.FunctionComponent<Props> = (props)=>{\r\n    return (\r\n    <div className=\"form-group mb-1\">\r\n        <label className='m-0 p-0' >{props.title}</label>\r\n        <input className={`p-0 form-control form-control-${props.size}`} name={props.content} type={props.type} id={props.content} value={props.input} onChange={(e)=>{props.change(e)}} />\r\n        <small>{props.children}</small>\r\n    </div>\r\n    )\r\n}\r\nexport default FormGroup","import * as React from 'react'\r\nimport * as yup from 'yup'\r\nimport { SignInStatus, ToggleModal } from '../../context/context'\r\nimport { signInAction } from '../../actions/signInAction';\r\nimport { showModal, hideModal } from '../../actions/showModalAction'\r\nimport usePostData from '../../hooks/usePostData'\r\nimport FormGroup from '../FormGroup'\r\nimport useChangeInput from '../../hooks/useChangeInput'\r\nimport ModalButton from '../Modal/ModalButton'\r\nimport AlertModal from '../Modal/AlertModal'\r\nimport useValidation from '../../hooks/useValidation'\r\nimport API_Url from '../../constants/api'\r\nconst schema = yup.object().shape({\r\n    username: yup.string().required().min(6),\r\n    password: yup.string().required().min(6)\r\n})\r\nconst initialResponse = {\r\n    data: {\r\n        username: '',\r\n        userId: ''\r\n    },\r\n    status: false,\r\n    message: ''\r\n}\r\ntype AccontInput = {\r\n    username: string;\r\n    password: string;\r\n}\r\ntype Props = {\r\n    target: string;\r\n    title: string;\r\n}\r\nconst UserAccount: React.FunctionComponent<Props> = (props) => {\r\n    const { signInStatus, signInDispatch } = React.useContext(SignInStatus);\r\n    const { modalStatus, modalDispatch } = React.useContext(ToggleModal)\r\n    const [response, resetResponse, setTrigger] = usePostData(initialResponse)\r\n    const [input, handleChange, setInput] = useChangeInput<AccontInput>({\r\n        username: '',\r\n        password: '',\r\n    });\r\n    const [validation, validate, setValidation] = useValidation(input, schema)\r\n    const handleSignIn = async () => {\r\n        setTrigger(`${API_Url}/user`, {body: JSON.stringify({...input,action:'signIn'})})\r\n    }\r\n    const handleSignUp = () => {\r\n        setTrigger(`${API_Url}/user`, {body: JSON.stringify({...input,action:'signUp'})})\r\n    }\r\n    const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        e.preventDefault();\r\n        const result = await validate();\r\n        if (result) { props.target === 'signIn' ? handleSignIn() : handleSignUp() }\r\n    }\r\n    const handleCancel = () => {\r\n        modalDispatch(hideModal())\r\n    }\r\n    const handleResponse = () => {\r\n        if (response.data) {\r\n                signInDispatch(signInAction(response.data.username, response.data.userId));\r\n                modalDispatch(hideModal(props.target));\r\n        }\r\n        resetResponse();\r\n        setInput({ username: '', password: '' })\r\n    }\r\n    return (\r\n        <div className='post-content  mx-auto bg-white px-3 d-flex flex-column justify-content-around'>\r\n            <div className=''>\r\n                <h5 className=\"text-center m-0 py-1\">{props.title}</h5>\r\n                <form action=\"\">\r\n                    <FormGroup input={input.username} change={handleChange} size='sm' content=\"username\" type='text' title='Username'>username at least 6</FormGroup>\r\n                    <FormGroup input={input.password} change={handleChange} size='sm' content=\"password\" type='password' title=\"Password\">password at least 6</FormGroup>\r\n                    <div className='d-flex justify-content-between p-1'>\r\n                        <button className='btn btn-sm btn-primary' type=\"submit\" onClick={handleSubmit}>Submit</button>\r\n                        <button className='btn btn-sm btn-danger' type=\"button\" onClick={handleCancel}>Cancel</button>\r\n                    </div>\r\n                </form>\r\n                <hr className='m-0' />\r\n                <div className='d-flex justify-content-between align-items-center py-1'>\r\n                    <small>{props.target === 'signIn' ? \"Don't have an account?\" : \"Already have an account\"}</small>\r\n                    <ModalButton target={props.target === 'signIn' ? \"signUp\" : \"signIn\"}>{props.target === 'signIn' ? \"Sign Up\" : \"Sign In\"}</ModalButton>\r\n                </div>\r\n                {response.status && <AlertModal message={response.message} confirm={handleResponse} clear={handleResponse} />}\r\n                {validation.error && <AlertModal message={validation.message[0]} confirm={() => { setValidation({ error: false, message: '' }); }}  clear={() => { setValidation({ error: false, message: '' }); setInput({ username: '', password: '' }); }} />}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default UserAccount","import * as React from 'react'\r\nimport PostAtask from '../../containers/PostATask/PostAtask'\r\nimport UserAccount from '../UserAdmin/UserAccount'\r\nimport {ToggleModal} from '../../context/context'\r\nimport './style.css'\r\n\r\nconst ModalContent = ()=>{\r\n    const {modalStatus,modalDispatch} = React.useContext(ToggleModal)\r\n    return (\r\n        <>\r\n            {modalStatus.modal === 'postATask' && <PostAtask />}\r\n            {modalStatus.modal === 'signIn' &&  <UserAccount title=\"Sign In\" target=\"signIn\"></UserAccount>}\r\n            {modalStatus.modal === 'signUp' &&  <UserAccount title=\"Sign Up\" target=\"signUp\"></UserAccount>}\r\n        </>\r\n    )\r\n}\r\nexport default ModalContent","import * as React from 'react'\r\nimport ModalContent from './ModalContent'\r\nimport './style.css'\r\n\r\nconst ModalWrapper = ()=>{\r\n    return (\r\n        <div className='modal-container'>\r\n            <ModalContent />\r\n        </div>\r\n    )\r\n}\r\nexport default ModalWrapper","type ToggleModalState = {\r\n    status:boolean;\r\n    modal:string;\r\n}\r\nexport type ToggleModalAction = {\r\n    type:string;\r\n    text:string;\r\n}\r\nconst showModalReducer = (state:ToggleModalState,action:ToggleModalAction):ToggleModalState=>{\r\n    switch (action.type){\r\n        case 'show':\r\n            return {status:true,modal:action.text};\r\n        case 'hide':\r\n            return {status:false,modal:''};\r\n        default:\r\n            throw new Error()\r\n    }\r\n}\r\nexport default showModalReducer","interface  SignInStatusState  {\r\n    username:string;\r\n    isSignIn:boolean;\r\n    userId:string;\r\n}\r\nexport type SignInAction = {\r\n    type:string\r\n    text:string\r\n    id:string\r\n}\r\nexport type SignOutAction = {\r\n    type:string\r\n    text:'';\r\n    id:string;\r\n}\r\n\r\n\r\nconst signInReducer:React.Reducer<SignInStatusState,SignOutAction|SignInAction>= (state,action)=>{\r\n    switch(action.type){\r\n        case 'signIn':\r\n            return {isSignIn:true,username:action.text,userId:action.id}\r\n        case 'signOut':\r\n            return {isSignIn:false,username:'',userId:''}\r\n        default:\r\n            throw new Error()\r\n    }\r\n}\r\nexport default signInReducer\r\n","type  UpdateState = boolean\r\nexport type UpdateAction = {\r\n    type:string\r\n}\r\nconst updateReducer:React.Reducer<UpdateState,UpdateAction>=(state,action)=>{\r\n    switch(action.type){\r\n        case 'start':\r\n            return true\r\n        case 'end':\r\n            return false\r\n        default:\r\n            throw new Error()\r\n            \r\n    }\r\n}\r\nexport default updateReducer","import * as React from 'react'\r\nimport Main from './Main'\r\nimport ModalWrapper from '../../components/Modal/ModalWrapper'\r\nimport showModalReducer from '../../reducers/showModalReducer'\r\nimport { SignInStatus, ToggleModal, Update } from '../../context/context'\r\nimport signInReducer from '../../reducers/signInReducer';\r\nimport updateReducer from '../../reducers/updateReducer';\r\nimport { signInAction, signOutAction } from '../../actions/signInAction'\r\nimport API_Url from '../../constants/api'\r\n\r\nconst App = () => {\r\n    const [update, updateDispatch] = React.useReducer(updateReducer, false);\r\n    const [modalStatus, modalDispatch] = React.useReducer(showModalReducer, { status: false, modal: '' });\r\n    const [signInStatus, signInDispatch] = React.useReducer(signInReducer, { username: '', userId: '', isSignIn: false });\r\n    const checkSign = async () => {\r\n        const result = await fetch(`${API_Url}/user`, { method: 'post', credentials: 'include' })\r\n        const response = await result.json();\r\n        if (result.ok) {\r\n            signInDispatch(signInAction(response.data.username, response.data.userId))\r\n        }\r\n    }\r\n    React.useEffect(() => { checkSign() }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToggleModal.Provider value={{ modalStatus, modalDispatch }}>\r\n                <SignInStatus.Provider value={{ signInStatus, signInDispatch }}>\r\n                    <Update.Provider value={{ update, updateDispatch }}>\r\n                        <Main />\r\n                        {modalStatus.status && <ModalWrapper />}\r\n                    </Update.Provider>\r\n                </SignInStatus.Provider>\r\n            </ToggleModal.Provider>\r\n        </>\r\n    )\r\n}\r\nexport default App","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}